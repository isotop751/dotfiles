
# lock the screen
super + shift + x
	betterlockscreen --lock blur --text "Locked - $HOSTNAME"

# on screen keyboard
super + p
	onboard

# invert screen colors
super + shift + p
	xcalib -invert -alter

# rofi
super + z
	rofi -show combi


# audio control
XF86AudioLowerVolume
	pactl set-sink-volume @DEFAULT_SINK@ -1000

XF86AudioRaiseVolume
	pactl set-sink-volume @DEFAULT_SINK@ +1000

XF86AudioMute
	pactl set-sink-mute @DEFAULT_SINK@ toggle


# brightness control
XF86MonBrightnessUp
	light -A 5

XF86MonBrightnessDown
	light -U 5


# full screenshot
super + Print
	maim --format png --quality 10 $HOME/documents/screenshots/$(date +%s).png

# partial screenshot 
super + shift + Print
	maim --format png --quality 10 --select $HOME/documents/screenshots/$(date +%s).png




# temp screenshot
super + ctrl + Print
	maim --format png /dev/stdout | copyq write image/png -

# temp screenshot interactive
super + alt + Print
	maim -s --format png /dev/stdout | copyq write image/png -



# terminal emulator
super + Return
	alacritty

super + alt + Return
	urxvt


# dmenu
super + @space
	dmenu_run





# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd





#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction

super + {_,shift + }{Left,Down,Up,Right}
# super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction

super + ctrl + {Left,Down,Up,Right}
# super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {Left,Down,Up,Right}
# super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward

super + alt + shift + {Left,Down,Up,Right}
# super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {h,j,k,l}
# super + {Left,Down,Up,Right}
 	     bspc node -v {-20 0,0 20,0 -20,20 0}


#
# increase or decease gaps for focused window
#

super + alt + KP_Add
		bspc config -d focused window_gap $((`bspc config -d focused window_gap` + 5))

super + alt + KP_Subtract
		bspc config -d focused window_gap $((`bspc config -d focused window_gap` - 5))

super + alt + equal
		bspc config -d focused window_gap 5


#
# increase or decrease gaps for all windows
#

super + KP_Add
		bspc config window_gap $((`bspc config window_gap` + 5))

super + KP_Subtract
		bspc config window_gap $((`bspc config window_gap` - 5))

super + equal
		bspc config window_gap 5
